version: '2'
services:
  connect:
    image: confluentinc/cp-kafka-connect
    hostname: connect
    #depends_on:
      #- zookeeper
      #- broker
      #- schema_registry
    ports:
      - 8083:8083
    networks:
      - host
    volumes:
      - ~/jars:/etc/kafka-connect/jars/
  environment:
    CONNECT_BOOTSTRAP_SERVERS: '127.0.0.1:9092'
    CONNECT_REST_ADVERTISED_HOST_NAME: connect
    CONNECT_REST_PORT: 8083
    CONNECT_GROUP_ID: compose-connect-group
    CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
    CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
    CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
    CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://127.0.0.1:8081'
    CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://127.0.0.1:8081'
    CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    CONNECT_ZOOKEEPER_CONNECT: '127.0.0.1:2181'
    CONNECT_PLUGIN_PATH: '/etc/kafka-connect/jars'